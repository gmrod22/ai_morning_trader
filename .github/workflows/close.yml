name: Afternoon Close Positions

on:
  schedule:
    # Start a little before the close year-round; we wait until 15:55 NY inside the job.
    - cron: "45 19 * * 1-5"   # 19:45 UTC; works across EDT/EST with the wait step
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: afternoon-close-positions
  cancel-in-progress: false

jobs:
  run-close:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    env:
      APCA_API_KEY_ID: ${{ secrets.APCA_API_KEY_ID }}
      APCA_API_SECRET_KEY: ${{ secrets.APCA_API_SECRET_KEY }}
      APCA_PAPER: ${{ secrets.APCA_PAPER }}     # "true" for paper, "false" for live
      DRY_RUN: ${{ secrets.DRY_RUN }}           # "true" to simulate, "false" to place orders
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Show runner time + config
        run: |
          echo "Runner UTC time: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          python - <<'PY'
import os, datetime, zoneinfo
utc_now = datetime.datetime.now(datetime.timezone.utc)
ny = zoneinfo.ZoneInfo("America/New_York")
print("NY time:", utc_now.astimezone(ny).strftime("%Y-%m-%d %H:%M:%S %Z"))
print("APCA_PAPER =", os.getenv("APCA_PAPER"))
print("DRY_RUN    =", os.getenv("DRY_RUN"))
PY

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait until 15:55 America/New_York
        run: |
          python - <<'PY'
import datetime, time, zoneinfo
ny = zoneinfo.ZoneInfo("America/New_York")
target_h, target_m = 15, 55   # change to (15, 59) if you prefer 15:59
while True:
  now = datetime.datetime.now(ny)
  if (now.hour, now.minute) >= (target_h, target_m):
    print("Reached:", now.strftime("%Y-%m-%d %H:%M:%S %Z"))
    break
  time.sleep(15)
PY

      - name: Run close script
        run: python trade_close.py
